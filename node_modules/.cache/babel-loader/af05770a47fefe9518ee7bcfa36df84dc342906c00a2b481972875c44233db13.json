{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandt\\\\Desktop\\\\JS-Full-Stack-Integration-\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        touched: true\n      };\n    default:\n      return state;\n  }\n}\n;\nexport default function Input(props) {\n  _s();\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false,\n    touched: false\n  });\n  const {\n    id,\n    onInput\n  } = props; //these props are pulled from the objects to avoid infinite loops within \n  const {\n    value,\n    isValid\n  } = inputState; //useEffect\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  function changeHandler(event) {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  }\n  ;\n  function touchHandler() {\n    dispatch({\n      type: 'TOUCH'\n    });\n  }\n  ;\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.touched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), element, !inputState.isValid && inputState.touched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Input, \"LyJbXxxiTVy8A28ive9k2x13x2I=\");\n_c = Input;\n;\n\n//We can also use third party libraries for form functionality such as React 'Formik'\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["useReducer","useEffect","validate","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","val","isValid","validators","touched","Input","props","_s","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["C:/Users/Brandt/Desktop/JS-Full-Stack-Integration-/src/shared/components/FormElements/Input.js"],"sourcesContent":["import { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';           \r\n\r\nfunction inputReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                touched: true\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default function Input(props) {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {value: '', isValid: false, touched: false});\r\n\r\n    const {id, onInput} = props;        //these props are pulled from the objects to avoid infinite loops within \r\n    const {value, isValid} = inputState;    //useEffect\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    function changeHandler(event) {\r\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\r\n    };\r\n\r\n    function touchHandler() {\r\n        dispatch({type: 'TOUCH'});\r\n    };\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input \r\n            id={props.id} \r\n            type={props.type} \r\n            placeholder={props.placeholder} \r\n            onChange={changeHandler} \r\n            onBlur={touchHandler}\r\n            value={inputState.value} \r\n        />\r\n    ) : (\r\n        <textarea \r\n            id={props.id} \r\n            rows={props.rows || 3} \r\n            onChange={changeHandler} \r\n            onBlur={touchHandler}\r\n            value={inputState.value} \r\n        /> \r\n    );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.touched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.touched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n//We can also use third party libraries for form functionality such as React 'Formik'"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}