{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useReducer } from 'react';\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          //if property is undefined, don't evaluate form validity\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\nexport function useForm(initialInputs, initialFormValidity) {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n}\n_s(useForm, \"NJ2SD08pCUQublfka4AuVShuOHk=\");\n;","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","_s","formState","dispatch","inputHandler","id","setFormData","inputData","formValidity"],"sources":["C:/Users/Brandt/Desktop/JS-Full-Stack-Integration-/src/shared/hooks/form-hook.js"],"sourcesContent":["import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {       //if property is undefined, don't evaluate form validity\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {value: action.value, isValid: action.isValid} \r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id})\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};"],"mappings":";AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAChC,IAAI,CAACL,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,EAAE;UAAQ;UAChC;QACJ;QACA,IAAIA,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC5BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC/C,CAAC,MAAM;UACHH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC9D;MACJ;MACA,OAAO;QACH,GAAGN,KAAK;QACRK,MAAM,EAAE;UACJ,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YAACG,KAAK,EAAEN,MAAM,CAACM,KAAK;YAAED,OAAO,EAAEL,MAAM,CAACK;UAAO;QACnE,CAAC;QACDA,OAAO,EAAEH;MACb,CAAC;IACL,KAAK,UAAU;MACX,OAAO;QACHE,MAAM,EAAEJ,MAAM,CAACI,MAAM;QACrBC,OAAO,EAAEL,MAAM,CAACE;MACpB,CAAC;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAGD,OAAO,SAASQ,OAAOA,CAACC,aAAa,EAAEC,mBAAmB,EAAE;EAAAC,EAAA;EAExD,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACC,WAAW,EAAE;IAClDM,MAAM,EAAEI,aAAa;IACrBH,OAAO,EAAEI;EACb,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAGjB,WAAW,CAAC,CAACkB,EAAE,EAAER,KAAK,EAAED,OAAO,KAAK;IACrDO,QAAQ,CAAC;MAACX,IAAI,EAAE,cAAc;MAAEK,KAAK,EAAEA,KAAK;MAAED,OAAO,EAAEA,OAAO;MAAEF,OAAO,EAAEW;IAAE,CAAC,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGnB,WAAW,CAAC,CAACoB,SAAS,EAAEC,YAAY,KAAK;IACzDL,QAAQ,CAAC;MACLX,IAAI,EAAE,UAAU;MAChBG,MAAM,EAAEY,SAAS;MACjBd,WAAW,EAAEe;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACN,SAAS,EAAEE,YAAY,EAAEE,WAAW,CAAC;AACjD;AAACL,EAAA,CApBeH,OAAO;AAoBtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}