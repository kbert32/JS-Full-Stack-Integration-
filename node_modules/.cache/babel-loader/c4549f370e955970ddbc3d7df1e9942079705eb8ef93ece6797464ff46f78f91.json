{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandt\\\\Desktop\\\\JS-Full-Stack-Integration-\\\\src\\\\shared\\\\components\\\\UIElements\\\\Map.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const mapRef = useRef();\n  const {\n    center,\n    zoom\n  } = props; //consts are created for useEffect dependencies so it does not re-render everytime the props\n  //object changes, but only when the 'center' or 'zoom' properties change\n  useEffect(() => {\n    //useEffect is used so that the map object creation and marker logic are not run\n    //until the ref's link to the div has been established\n    const mapObj = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n    new window.google.maps.Marker({\n      position: center,\n      map: mapObj\n    });\n  }, [center, zoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: `map ${props.className}`,\n    style: props.style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","Map","props","_s","mapRef","center","zoom","mapObj","window","google","maps","current","Marker","position","map","ref","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brandt/Desktop/JS-Full-Stack-Integration-/src/shared/components/UIElements/Map.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nexport default function Map(props) {\r\n\r\n    const mapRef = useRef();\r\n\r\n    const {center, zoom} = props;   //consts are created for useEffect dependencies so it does not re-render everytime the props\r\n                                    //object changes, but only when the 'center' or 'zoom' properties change\r\n    useEffect(() => {           //useEffect is used so that the map object creation and marker logic are not run\r\n                                //until the ref's link to the div has been established\r\n        const mapObj = new window.google.maps.Map(mapRef.current, {\r\n            center: center,\r\n            zoom: zoom\r\n        });\r\n    \r\n        new window.google.maps.Marker({position: center, map: mapObj});\r\n    }, [center, zoom]);\r\n\r\n    \r\n    return <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\r\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE/B,MAAMC,MAAM,GAAGP,MAAM,EAAE;EAEvB,MAAM;IAACQ,MAAM;IAAEC;EAAI,CAAC,GAAGJ,KAAK,CAAC,CAAG;EACA;EAChCJ,SAAS,CAAC,MAAM;IAAY;IACA;IACxB,MAAMS,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACT,GAAG,CAACG,MAAM,CAACO,OAAO,EAAE;MACtDN,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA;IACV,CAAC,CAAC;IAEF,IAAIE,MAAM,CAACC,MAAM,CAACC,IAAI,CAACE,MAAM,CAAC;MAACC,QAAQ,EAAER,MAAM;MAAES,GAAG,EAAEP;IAAM,CAAC,CAAC;EAClE,CAAC,EAAE,CAACF,MAAM,EAAEC,IAAI,CAAC,CAAC;EAGlB,oBAAON,OAAA;IAAKe,GAAG,EAAEX,MAAO;IAACY,SAAS,EAAG,OAAMd,KAAK,CAACc,SAAU,EAAE;IAACC,KAAK,EAAEf,KAAK,CAACe;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC5F;AAAClB,EAAA,CAlBuBF,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}